@model X.PagedList.IPagedList<ArkSoft_MVC.Models.Customer>
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Customers";
}

<h1>All Customers</h1>


<p>
    <a asp-action="CreateCustomer">Create New</a>
</p>

@using (Html.BeginForm("AllCustomers", "Customer", FormMethod.Get))
{
    <p>
        Search by Name: @Html.TextBox("searchFilter", ViewBag.currentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @{
                    string sortDirection;
                    if (ViewBag.currentSort == "Name")
                    {
                        sortDirection = ViewBag.nextDirection;
                    }
                    else
                    {
                        sortDirection = "asc";
                    }
                }
                @Html.ActionLink("Full Name", "AllCustomers",
                new { sortOrder = "Name", sortDirection = sortDirection, page = 1 })
            </th>
            <th>
                Address
            </th>
            <th>
                Telephone Number
            </th>
            <th>
                Contact Person Name
            </th>
            <th>
                Contact Person Email
            </th>
            <th>
                @{
                    string sortDirection2;
                    if (ViewBag.currentSort == "VAT Number")
                    {
                        sortDirection2 = ViewBag.nextDirection;
                    }
                    else
                    {
                        sortDirection2 = "asc";
                    }
                }
                @Html.ActionLink("VAT Number", "AllCustomers",
                new { sortOrder = "VAT Number", sortDirection = sortDirection2, page = 1 })
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model == null || Model.Count() == 0) //if no data to show
        {
            <tr>
                <td colspan="7">No Customer Data to Display</td>
            </tr>
        }
        else
        {
            //otherwise, show details of each  individual custoemr
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.custName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.custAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.custTelephone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.custContactName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.custContactEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.vatNumber)
                    </td>
                    <td>
                        <form asp-action="UpdateDetails" method="get">
                            <input type="hidden" name="custID" value="@item.custID" />
                            <button type="submit" class="btn btn-dark">Update</button>
                        </form>

                        <form asp-action="Delete" method="get">
                            <input type="hidden" name="custID" value="@item.custID" />
                            <button type="submit" class="btn btn-dark" onclick="return confirm('Are you sure you want to delete this customer?');">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<br />
<div id="pager">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="AllCustomers"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageNumber - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-sortDirection="@ViewBag.currentDirection"
       class="btn btn-default @prevDisabled">
        Previous
    </a>

    <p>
        @Model.PageNumber of @Model.PageCount
    </p>

    <a asp-action="AllCustomers"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageNumber + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-sortDirection="@ViewBag.currentDirection"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>

